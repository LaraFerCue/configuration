---
- name: Setup for workstations (Email, web-browsing, ...)
  #  hosts: '{{ target }}'
  hosts: workstations
  tasks:
    - name: Install packages
      become: yes
      package:
          name: "{{ item }}"
          state: latest
      loop:
        - xorg
        - i3
        - i3status
        - i3lock
        - dmenu
        - vim-console
        - firefox
        - tmux
        - htop
        - cups
        - neomutt
        - rxvt-unicode
        - slim
        - rsync
        - thunderbird
        - nitrogen
        - git
        - subversion
        - libreoffice
        - cups-filters
        - gutenprint
        - texlive-full
    - name: Create configuration directories
      file: path={{ item.path }} state=directory
      with_items:
        - { path: '~/.config' }
        - { path: '~/.config/i3' }
        - { path: '~/.config/i3status' }
        - { path: '~/.config/nitrogen' }
        - { path: '~/.config/resources' }
    - name: Configure i3
      block:
          - name: Create folders needed by i3
            file: path={{ item }} state=directory
            loop:
                - ~/.config/i3
                - ~/.config/i3status
                - ~/.i3
                - ~/.config/nitrogen
                - ~/.config/resources
          - name: Install configuration files for i3
            copy: src={{ item.src }} dest={{ item.dest }}
            with_items:
                - { src: 'i3/i3_config',        dest: '~/.config/i3/config'       }
                - { src: 'i3/i3status_config',  dest: '~/.config/i3status/config' }
                - { src: 'i3/i3status.sh',      dest: '~/.i3/i3status.sh'         }
                - { src: 'config/nitrogen.cfg', dest: '~/.config/nitrogen/nitrogen.cfg'    }
                - { src: 'resources/background.png', dest: '~/.config/resources/background.png' }
    - name: Configure vim
      block:
          - name: Create vim autoload folder
            file:
                path: ~/.vim/autoload
                state: directory
          - name: Configure vim
            synchronize:
                src: vim/vimrc
                dest: ~/.vimrc
          - name: Fetch plugin manager
            get_url:
                url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
                dest: ~/.vim/autoload/plug.vim
          - name: Install the needed plugins for vim
            shell: 'vim "+PlugInstall | qa"'
    - name: Configure mutt, xorg, csh, mailcap
      copy: src={{ item.src }} dest={{ item.dest }}
      with_items:
        - { src: 'config/Xdefaults',    dest: '~/.Xdefaults'    }
        - { src: 'config/xinitrc',      dest: '~/.xinitrc'      }
        - { src: 'config/muttrc',       dest: '~/.muttrc'       }
        - { src: 'config/mailcap',      dest: '~/.mailcap'      }
        - { src: 'config/cshrc',        dest: '~/.cshrc'        }
        - { src: 'config/tmux.conf',    dest: '~/.tmux.conf'    }
    - name: Loading the kmod coretemp on rc
      become: yes
      lineinfile: path=/etc/rc.conf regexp={{ item.regexp }} line={{ item.line }} state=present
      with_items:
          - { regexp: '^kld_list="\$\{kld_list\} coretemp"',    line: 'kld_list="${kld_list} coretemp"' }
          - { regexp: '^sendmail_enable="YES"',                 line: 'sendmail_enable="YES"' }
      when: ansible_os_family == "FreeBSD"
    - block:
          - name: Copy crontab
            become: yes
            copy:
                src: update/crontab
                dest: /root/crontab
                owner: root
                group: wheel
                mode: '0600'
                validate: /usr/bin/crontab -u root %s
          - name: Install notifier of pkg upgrades
            become: yes
            copy:
                src: bin/update-packages.sh
                dest: /usr/local/sbin/update-packages
                mode: 555
                validate: /bin/sh -eun %s
          - name: Install FreeBSD update configuration file
            become: yes
            copy:
                src: update/freebsd-update.conf
                dest: /etc/freebsd-update.conf
    - name: Installing the utility to activate boot environments on encrypted disks
      become: yes
      copy:
          src: bin/bootenv.sh
          dest: ~/bin/bootenv
...
